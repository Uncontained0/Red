import{_ as s,c as a,o as n,a as e}from"./app.1de793c8.js";const F=JSON.parse('{"title":"Client","description":"","frontmatter":{},"headers":[{"level":2,"title":"Methods","slug":"methods","link":"#methods","children":[{"level":3,"title":"Fire","slug":"fire","link":"#fire","children":[]},{"level":3,"title":"Call","slug":"call","link":"#call","children":[]},{"level":3,"title":"Callback","slug":"callback","link":"#callback","children":[]},{"level":3,"title":"Instance","slug":"instance","link":"#instance","children":[]},{"level":3,"title":"ClientInstance","slug":"clientinstance","link":"#clientinstance","children":[]}]}],"relativePath":"0.1.x/api/client.md"}'),l={name:"0.1.x/api/client.md"},o=e(`<h1 id="client" tabindex="-1">Client <a class="header-anchor" href="#client" aria-hidden="true">#</a></h1><p>This object represents a client namespace. It is used to network from the client to the server.</p><h2 id="methods" tabindex="-1">Methods <a class="header-anchor" href="#methods" aria-hidden="true">#</a></h2><h3 id="fire" tabindex="-1">Fire <a class="header-anchor" href="#fire" aria-hidden="true">#</a></h3><p><code>(self, EventName: string, ...any) -&gt; ()</code></p><p>This fires the given event at the server with the given arguments. The event will be sent at the next heartbeat.</p><div class="language-lua"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#89DDFF;">local</span><span style="color:#A6ACCD;"> MyNamespace </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> Red.</span><span style="color:#82AAFF;">Client</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">MyNamespace</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FFCB6B;">MyNamespace</span><span style="color:#A6ACCD;">:</span><span style="color:#82AAFF;">Fire</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">MyEvent</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">, </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Hello</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">, </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">World</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"></span></code></pre></div><h3 id="call" tabindex="-1">Call <a class="header-anchor" href="#call" aria-hidden="true">#</a></h3><p><code>(self, EventName: string, ...any) -&gt; Promise</code></p><p>This calls the given event at the server with the given arguments. The event will be sent at the next heartbeat. The returned promise will be resolved with the values returned from the server. If the server errors, the promise will be rejected with the error.</p><div class="language-lua"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#89DDFF;">local</span><span style="color:#A6ACCD;"> MyNamespace </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> Red.</span><span style="color:#82AAFF;">Client</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">MyNamespace</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FFCB6B;">MyNamespace</span><span style="color:#A6ACCD;">:</span><span style="color:#82AAFF;">Call</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">MyEvent</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">, </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Hello</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">, </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">World</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">):</span><span style="color:#82AAFF;">Then</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;font-style:italic;">function</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">...)</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#82AAFF;">print</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">...</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">end</span><span style="color:#A6ACCD;">):</span><span style="color:#82AAFF;">Catch</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;font-style:italic;">function</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">Error</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#82AAFF;">print</span><span style="color:#A6ACCD;">(Error)</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">end</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"></span></code></pre></div><h3 id="callback" tabindex="-1">Callback <a class="header-anchor" href="#callback" aria-hidden="true">#</a></h3><p><code>(self, EventName: string, Callback: (...any) -&gt; ()) -&gt; ()</code></p><p>This registers a callback for the given event. The callback will be called when the event is fired. Any returned values from the callback will be ignored, the server cannot call the client.</p><div class="language-lua"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#89DDFF;">local</span><span style="color:#A6ACCD;"> MyNamespace </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> Red.</span><span style="color:#82AAFF;">Client</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">MyNamespace</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FFCB6B;">MyNamespace</span><span style="color:#A6ACCD;">:</span><span style="color:#82AAFF;">Callback</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">MyEvent</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">, </span><span style="color:#89DDFF;font-style:italic;">function</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">...)</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#82AAFF;">print</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">...</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">end</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"></span></code></pre></div><h3 id="instance" tabindex="-1">Instance <a class="header-anchor" href="#instance" aria-hidden="true">#</a></h3><p><code>(self) -&gt; Instance</code></p><p>This returns the instance of the client namespace. If the corrosponding server namespace has not called the <code>Instance</code> method, then the instance will not exist and this method will yield forever.</p><div class="language-lua"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#89DDFF;">local</span><span style="color:#A6ACCD;"> MyNamespace </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> Red.</span><span style="color:#82AAFF;">Client</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">MyNamespace</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">local</span><span style="color:#A6ACCD;"> Leaderboard </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">MyNamespace</span><span style="color:#A6ACCD;">:</span><span style="color:#82AAFF;">Instance</span><span style="color:#A6ACCD;">()</span></span>
<span class="line"></span></code></pre></div><h3 id="clientinstance" tabindex="-1">ClientInstance <a class="header-anchor" href="#clientinstance" aria-hidden="true">#</a></h3><p><code>(self) -&gt; Instance</code></p><p>This returns the instance of the client namespace. If the corrosponding server namespace has not called the <code>Instance</code> method for this player, then the instance will not exist and this method will yield forever.</p><div class="language-lua"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#89DDFF;">local</span><span style="color:#A6ACCD;"> MyNamespace </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> Red.</span><span style="color:#82AAFF;">Client</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">MyNamespace</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">local</span><span style="color:#A6ACCD;"> LocalPlayerData </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">MyNamespace</span><span style="color:#A6ACCD;">:</span><span style="color:#82AAFF;">ClientInstance</span><span style="color:#A6ACCD;">()</span></span>
<span class="line"></span></code></pre></div>`,23),t=[o];function p(c,r,i,y,D,C){return n(),a("div",null,t)}const d=s(l,[["render",p]]);export{F as __pageData,d as default};
