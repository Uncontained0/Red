import{_ as s,c as a,o as e,a as n}from"./app.1de793c8.js";const u=JSON.parse('{"title":"Getting Started","description":"","frontmatter":{},"headers":[{"level":2,"title":"Installation","slug":"installation","link":"#installation","children":[{"level":3,"title":"Git Submodule","slug":"git-submodule","link":"#git-submodule","children":[]},{"level":3,"title":"Wally","slug":"wally","link":"#wally","children":[]}]},{"level":2,"title":"Basic Usage","slug":"basic-usage","link":"#basic-usage","children":[]},{"level":2,"title":"What Next?","slug":"what-next","link":"#what-next","children":[]}],"relativePath":"0.1.x/guide/getting-started.md"}'),l={name:"0.1.x/guide/getting-started.md"},o=n(`<h1 id="getting-started" tabindex="-1">Getting Started <a class="header-anchor" href="#getting-started" aria-hidden="true">#</a></h1><p>This section will walk you through the process of installing Red and the most basic usage. This guide assumes you are familiar with Rojo, Git, and Wally.</p><h2 id="installation" tabindex="-1">Installation <a class="header-anchor" href="#installation" aria-hidden="true">#</a></h2><p>Red is available only through Rojo. You can choose to include it as a git-submodule or as a wally dependency.</p><h3 id="git-submodule" tabindex="-1">Git Submodule <a class="header-anchor" href="#git-submodule" aria-hidden="true">#</a></h3><p>To install Red as a git submodule, run the following command in your project directory:</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#FFCB6B;">git</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">submodule</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">add</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">https://github.com/Uncontained0/Red.git</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">FILEPATH</span></span>
<span class="line"></span></code></pre></div><p>Replace <code>FILEPATH</code> with the path you want to install Red to.</p><h3 id="wally" tabindex="-1">Wally <a class="header-anchor" href="#wally" aria-hidden="true">#</a></h3><p>To install Red as a wally dependency, add the following to your <code>wally.toml</code> file:</p><div class="language-toml"><button title="Copy Code" class="copy"></button><span class="lang">toml</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#89DDFF;">[</span><span style="color:#FFCB6B;">dependencies</span><span style="color:#89DDFF;">]</span></span>
<span class="line"><span style="color:#A6ACCD;">Red </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">uncontained0/Red@0.1.0</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"></span></code></pre></div><h2 id="basic-usage" tabindex="-1">Basic Usage <a class="header-anchor" href="#basic-usage" aria-hidden="true">#</a></h2><p>Red is ready to use right out of the box. There is no start process needed.</p><p>Let&#39;s start by creating a simple event on the server that just prints the arguments passed to it.</p><div class="language-lua"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#89DDFF;">local</span><span style="color:#A6ACCD;"> Red </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">require</span><span style="color:#A6ACCD;">(Path.</span><span style="color:#FFCB6B;">To</span><span style="color:#A6ACCD;">.</span><span style="color:#FFCB6B;">Red</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">Red.</span><span style="color:#82AAFF;">Server</span><span style="color:#A6ACCD;">():</span><span style="color:#82AAFF;">Callback</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Print</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">, </span><span style="color:#89DDFF;font-style:italic;">function</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">...)</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#82AAFF;">print</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">...</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">end</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"></span></code></pre></div><div class="info custom-block"><p class="custom-block-title">INFO</p><p>What we&#39;re really doing here is accessing the global namespace by calling <code>Red.Server</code> without any arguments, then setting up a callback on the <code>Print</code> event.</p><p>It&#39;s important to note that each event can only have one callback, the reason for this will be explained later.</p></div><p>Now let&#39;s call this event on the client.</p><div class="language-lua"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#89DDFF;">local</span><span style="color:#A6ACCD;"> Red </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">require</span><span style="color:#A6ACCD;">(Path.</span><span style="color:#FFCB6B;">To</span><span style="color:#A6ACCD;">.</span><span style="color:#FFCB6B;">Red</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">Red.</span><span style="color:#82AAFF;">Client</span><span style="color:#A6ACCD;">():</span><span style="color:#82AAFF;">Fire</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Print</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">, </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Hello</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">, </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">World</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"></span></code></pre></div><p>This code is great, but it&#39;s in the global namespace. Let&#39;s move it to a namespace called <code>Logger</code>.</p><div class="language-lua"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#A6ACCD;">Red.</span><span style="color:#82AAFF;">Server</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Namespace</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">):</span><span style="color:#82AAFF;">Callback</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Print</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">, </span><span style="color:#89DDFF;font-style:italic;">function</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">...)</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#82AAFF;">print</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">...</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">end</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"></span></code></pre></div><div class="language-lua"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#A6ACCD;">Red.</span><span style="color:#82AAFF;">Client</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Namespace</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">):</span><span style="color:#82AAFF;">Fire</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Print</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">, </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Hello</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">, </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">World</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"></span></code></pre></div><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>Its useful to know that namespaces are only created once, so call <code>Red.Server</code> as many times as you please.</p></div><h2 id="what-next" tabindex="-1">What Next? <a class="header-anchor" href="#what-next" aria-hidden="true">#</a></h2><p>Now that you&#39;ve gotten a feel for the style of Red, you can continue to learn more about the API by reading the rest of this guide, or by skipping ahead to the API Reference.</p><p>If you need any help, feel free to join the <a href="https://discord.gg/mchCdAFPWU" target="_blank" rel="noreferrer">Roblox OSS Discord</a> and ask in the <a href="https://discord.com/err" target="_blank" rel="noreferrer">Red Forum Post</a>.</p><p>If you don&#39;t feel like joining a server you can open an issue on the github repository.</p>`,26),t=[o];function p(c,r,i,d,y,D){return e(),a("div",null,t)}const A=s(l,[["render",p]]);export{u as __pageData,A as default};
